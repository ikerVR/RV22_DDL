-- 1) Crear base y seleccionar
CREATE OR REPLACE DATABASE RV22;
USE DATABASE RV22;

-- 2) Crear schemas
CREATE OR REPLACE SCHEMA CLIENTES;
CREATE OR REPLACE SCHEMA CUENTAS;
CREATE OR REPLACE SCHEMA EMPLEADOS;
CREATE OR REPLACE SCHEMA ENTREGAS;
CREATE OR REPLACE SCHEMA MAQUILA;
CREATE OR REPLACE SCHEMA MATERIALES;
CREATE OR REPLACE SCHEMA PEDIDOS;
CREATE OR REPLACE SCHEMA PRODUCCION;
CREATE OR REPLACE SCHEMA PRODUCTOS;
CREATE OR REPLACE SCHEMA PUBLIC;
CREATE OR REPLACE SCHEMA STOCK;

--------------------------------------------------------------------------------
-- 3) CLIENTES
--------------------------------------------------------------------------------
CREATE OR REPLACE TABLE CLIENTES.CLIENTE (
  ID_CLIENTE           NUMBER(38,0) NOT NULL,
  RAZON_SOCIAL         VARCHAR(100),
  NOMBRE               VARCHAR(50),
  RFC                  VARCHAR(13),
  FECHA_ALTA           DATE,
  ESTATUS              VARCHAR(20),
  TELEFONO             VARCHAR(20),
  EMAIL                VARCHAR(100),
  DIRECCION            VARCHAR(255),
  TIPO_CLIENTE         VARCHAR(30),
  CAPACIDAD_SEMANAL    NUMBER(38,0),
  PRIMARY KEY (ID_CLIENTE)
);

--------------------------------------------------------------------------------
-- 4) MAQUILA
--------------------------------------------------------------------------------
CREATE OR REPLACE TABLE MAQUILA.MAQUILA (
  ID_MAQUILA           NUMBER(38,0) NOT NULL,
  RAZON_SOCIAL         VARCHAR(100),
  NOMBRE               VARCHAR(50),
  RFC                  VARCHAR(13),
  FECHA_ALTA           DATE,
  ESTATUS              VARCHAR(20),
  TELEFONO             VARCHAR(20),
  EMAIL                VARCHAR(100),
  DIRECCION            VARCHAR(255),
  TIPO_CLIENTE         VARCHAR(30),
  CAPACIDAD_SEMANAL    NUMBER(38,0),
  PRIMARY KEY (ID_MAQUILA)
);

--------------------------------------------------------------------------------
-- 5) MATERIALES
--------------------------------------------------------------------------------
CREATE OR REPLACE TABLE MATERIALES.MATERIAL_COLOR (
  ID_MATERIAL_COLOR    VARCHAR(50) NOT NULL,
  TIPO                 VARCHAR(20) COMMENT 'EVA o TR',
  CATEGORIA            VARCHAR(20) COMMENT 'SOLIDO o TRANSPARENTE',
  NOMBRE               VARCHAR(100),
  UNIDAD               VARCHAR(20),
  FACTOR               FLOAT,
  PRECIO               NUMBER(14,4),
  PRIMARY KEY (ID_MATERIAL_COLOR)
);

CREATE OR REPLACE TABLE MATERIALES.PIEZA (
  ID_PIEZA             VARCHAR(50) NOT NULL,
  CATEGORIA            VARCHAR(50),
  PIEZA                VARCHAR(100),
  NOMBRE               VARCHAR(100),
  UNIDAD               VARCHAR(20),
  FACTOR               FLOAT,
  PRECIO               NUMBER(14,4),
  PRECIO_BORDADO       NUMBER(14,4),
  PRIMARY KEY (ID_PIEZA)
);

--------------------------------------------------------------------------------
-- 6) PRODUCTOS
--------------------------------------------------------------------------------
CREATE OR REPLACE TABLE PRODUCTOS.CORTE (
  ID_CORTE             VARCHAR(50) NOT NULL,
  NOMBRE               VARCHAR(100),
  TIPO                 VARCHAR(50),
  PUNTO                NUMBER(38,0),
  PRIMARY KEY (ID_CORTE)
);

CREATE OR REPLACE TABLE PRODUCTOS.CORTE_COMPOSICION (
  ID_CORTE_COMPOSICION VARCHAR(50) NOT NULL,
  ID_CORTE             VARCHAR(50) NOT NULL,
  NOMBRE               VARCHAR(100),
  PRIMARY KEY (ID_CORTE_COMPOSICION),
  FOREIGN KEY (ID_CORTE) REFERENCES PRODUCTOS.CORTE(ID_CORTE)
);

CREATE OR REPLACE TABLE PRODUCTOS.CORTE_COMBINACION (
  ID_CORTE_COMBINACION VARCHAR(50) NOT NULL,
  ID_CORTE             VARCHAR(50) NOT NULL,
  NOMBRE               VARCHAR(100),
  PRIMARY KEY (ID_CORTE_COMBINACION),
  FOREIGN KEY (ID_CORTE) REFERENCES PRODUCTOS.CORTE(ID_CORTE)
);

CREATE OR REPLACE TABLE PRODUCTOS.SUELA (
  ID_SUELA             VARCHAR(50) NOT NULL,
  NOMBRE               VARCHAR(100),
  TIPO                 VARCHAR(50),
  PUNTO                NUMBER(38,0),
  PRIMARY KEY (ID_SUELA)
);

CREATE OR REPLACE TABLE PRODUCTOS.SUELA_COMPOSICION (
  ID_SUELA_COMPOSICION VARCHAR(50) NOT NULL,
  ID_SUELA             VARCHAR(50) NOT NULL,
  NOMBRE               VARCHAR(100),
  PRIMARY KEY (ID_SUELA_COMPOSICION),
  FOREIGN KEY (ID_SUELA) REFERENCES PRODUCTOS.SUELA(ID_SUELA)
);

CREATE OR REPLACE TABLE PRODUCTOS.SUELA_COMBINACION (
  ID_SUELA_COMBINACION VARCHAR(50) NOT NULL,
  ID_SUELA             VARCHAR(50) NOT NULL,
  NOMBRE               VARCHAR(100),
  PRIMARY KEY (ID_SUELA_COMBINACION),
  FOREIGN KEY (ID_SUELA) REFERENCES PRODUCTOS.SUELA(ID_SUELA)
);

CREATE OR REPLACE TABLE PRODUCTOS.CORTE_COMBINACION_DETALLE (
  ID_CORTE_COMBINACION_DETALLE VARCHAR(50) NOT NULL,
  ID_CORTE_COMBINACION         VARCHAR(50) NOT NULL,
  ID_CORTE_COMPOSICION         VARCHAR(50) NOT NULL,
  ID_PIEZA                     VARCHAR(50) NOT NULL,
  CONSUMO                      NUMBER(14,4),
  PRIMARY KEY (ID_CORTE_COMBINACION_DETALLE),
  FOREIGN KEY (ID_CORTE_COMBINACION) REFERENCES PRODUCTOS.CORTE_COMBINACION(ID_CORTE_COMBINACION),
  FOREIGN KEY (ID_CORTE_COMPOSICION) REFERENCES PRODUCTOS.CORTE_COMPOSICION(ID_CORTE_COMPOSICION),
  FOREIGN KEY (ID_PIEZA) REFERENCES MATERIALES.PIEZA(ID_PIEZA)
);

CREATE OR REPLACE TABLE PRODUCTOS.SUELA_COMBINACION_DETALLE (
  ID_SUELA_COMBINACION_DETALLE VARCHAR(50) NOT NULL,
  ID_SUELA_COMBINACION         VARCHAR(50) NOT NULL,
  ID_SUELA_COMPOSICION         VARCHAR(50) NOT NULL,
  ID_MATERIAL_COLOR            VARCHAR(50) NOT NULL,
  CONSUMO                      NUMBER(14,4),
  PRIMARY KEY (ID_SUELA_COMBINACION_DETALLE),
  FOREIGN KEY (ID_SUELA_COMBINACION) REFERENCES PRODUCTOS.SUELA_COMBINACION(ID_SUELA_COMBINACION),
  FOREIGN KEY (ID_SUELA_COMPOSICION) REFERENCES PRODUCTOS.SUELA_COMPOSICION(ID_SUELA_COMPOSICION),
  FOREIGN KEY (ID_MATERIAL_COLOR) REFERENCES MATERIALES.MATERIAL_COLOR(ID_MATERIAL_COLOR)
);

CREATE OR REPLACE TABLE PRODUCTOS.ZAPATO (
  ID_ZAPATO            VARCHAR(50) NOT NULL,
  NOMBRE               VARCHAR(100),
  TIPO                 VARCHAR(50),
  MARCA                VARCHAR(50),
  ENSAMBLAJE           VARCHAR(100),
  PUNTO                NUMBER(38,0),
  STATUS               VARCHAR(20),
  FECHA_CREACION       DATE,
  PRIMARY KEY (ID_ZAPATO)
);

CREATE OR REPLACE TABLE PRODUCTOS.ZAPATO_COMBINACION (
  ID_ZAPATO_COMBINACION VARCHAR(50) NOT NULL,
  ID_ZAPATO             VARCHAR(50) NOT NULL,
  NOMBRE                VARCHAR(100),
  PRIMARY KEY (ID_ZAPATO_COMBINACION),
  FOREIGN KEY (ID_ZAPATO) REFERENCES PRODUCTOS.ZAPATO(ID_ZAPATO)
);

CREATE OR REPLACE TABLE PRODUCTOS.ZAPATO_COMBINACION_DETALLE (
  ID_ZAPATO_COMBINACION_DETALLE VARCHAR(50) NOT NULL,
  ID_ZAPATO_COMBINACION         VARCHAR(50) NOT NULL,
  ID_SUELA_COMBINACION          VARCHAR(50) NOT NULL,
  ID_CORTE_COMBINACION          VARCHAR(50) NOT NULL,
  PRIMARY KEY (ID_ZAPATO_COMBINACION_DETALLE),
  FOREIGN KEY (ID_ZAPATO_COMBINACION) REFERENCES PRODUCTOS.ZAPATO_COMBINACION(ID_ZAPATO_COMBINACION),
  FOREIGN KEY (ID_SUELA_COMBINACION) REFERENCES PRODUCTOS.SUELA_COMBINACION(ID_SUELA_COMBINACION),
  FOREIGN KEY (ID_CORTE_COMBINACION) REFERENCES PRODUCTOS.CORTE_COMBINACION(ID_CORTE_COMBINACION)
);

--------------------------------------------------------------------------------
-- 7) PEDIDOS
--------------------------------------------------------------------------------
CREATE OR REPLACE TABLE PEDIDOS.PEDIDO (
  ID_PEDIDO            VARCHAR(50) NOT NULL,
  ID_CLIENTE           NUMBER(38,0) NOT NULL,
  ID_MAQUILA           NUMBER(38,0) NOT NULL,
  FECHA_RECIBIDO       TIMESTAMP_NTZ(9),
  FECHA_ENTREGA        TIMESTAMP_NTZ(9),
  PRIMARY KEY (ID_PEDIDO),
  FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTES.CLIENTE(ID_CLIENTE),
  FOREIGN KEY (ID_MAQUILA) REFERENCES MAQUILA.MAQUILA(ID_MAQUILA)
);

CREATE OR REPLACE TABLE PEDIDOS.PEDIDO_COMBINACION (
  ID_PEDIDO_COMBINACION VARCHAR(50) NOT NULL,
  ID_PEDIDO             VARCHAR(50) NOT NULL,
  NOMBRE                VARCHAR(100),
  NUM_LOTES             NUMBER(38,0),
  CORRIDA               VARCHAR(50),
  PRIMARY KEY (ID_PEDIDO_COMBINACION),
  FOREIGN KEY (ID_PEDIDO) REFERENCES PEDIDOS.PEDIDO(ID_PEDIDO)
);

CREATE OR REPLACE TABLE PEDIDOS.PEDIDO_COMBINACION_DETALLE (
  ID_PEDIDO_COMBINACION_DETALLE VARCHAR(50) NOT NULL,
  ID_PEDIDO_COMBINACION         VARCHAR(50) NOT NULL,
  ID_ZAPATO_COMBINACION         VARCHAR(50) NOT NULL,
  CANTIDAD                      NUMBER(38,0),
  PRECIO                        FLOAT,
  PRIMARY KEY (ID_PEDIDO_COMBINACION_DETALLE),
  FOREIGN KEY (ID_PEDIDO_COMBINACION) REFERENCES PEDIDOS.PEDIDO_COMBINACION(ID_PEDIDO_COMBINACION),
  FOREIGN KEY (ID_ZAPATO_COMBINACION) REFERENCES PRODUCTOS.ZAPATO_COMBINACION(ID_ZAPATO_COMBINACION)
);

--------------------------------------------------------------------------------
-- 8) PRODUCCION
--------------------------------------------------------------------------------
CREATE OR REPLACE TABLE PRODUCCION.ARMADO (
  ID_ARMADO             VARCHAR(50) NOT NULL,
  ID_PEDIDO_COMBINACION_DETALLE VARCHAR(50) NOT NULL,
  CANTIDAD              NUMBER(38,0),
  FECHA_HORA            TIMESTAMP_NTZ(9),
  PRIMARY KEY (ID_ARMADO),
  FOREIGN KEY (ID_PEDIDO_COMBINACION_DETALLE) REFERENCES PEDIDOS.PEDIDO_COMBINACION_DETALLE(ID_PEDIDO_COMBINACION_DETALLE)
);

CREATE OR REPLACE TABLE PRODUCCION.EMPAQUE (
  ID_EMPAQUE            VARCHAR(50) NOT NULL,
  ID_PEDIDO_COMBINACION_DETALLE VARCHAR(50) NOT NULL,
  CANTIDAD              NUMBER(38,0),
  FECHA_HORA            TIMESTAMP_NTZ(9),
  PRIMARY KEY (ID_EMPAQUE),
  FOREIGN KEY (ID_PEDIDO_COMBINACION_DETALLE) REFERENCES PEDIDOS.PEDIDO_COMBINACION_DETALLE(ID_PEDIDO_COMBINACION_DETALLE)
);

CREATE OR REPLACE TABLE PRODUCCION.INYECCION (
  ID_INYECCION          VARCHAR(50) NOT NULL,
  ID_PEDIDO_COMBINACION_DETALLE VARCHAR(50) NOT NULL,
  CANTIDAD              NUMBER(38,0),
  FECHA_HORA            TIMESTAMP_NTZ(9),
  PRIMARY KEY (ID_INYECCION),
  FOREIGN KEY (ID_PEDIDO_COMBINACION_DETALLE) REFERENCES PEDIDOS.PEDIDO_COMBINACION_DETALLE(ID_PEDIDO_COMBINACION_DETALLE)
);

--------------------------------------------------------------------------------
-- 9) ENTREGAS
--------------------------------------------------------------------------------
CREATE OR REPLACE TABLE ENTREGAS.ENTREGA_CLIENTE (
  ID_ENTREGA_CLIENTE    VARCHAR(50) NOT NULL,
  ID_CLIENTE            NUMBER(38,0) NOT NULL,
  FECHA_HORA_SALIDA     TIMESTAMP_NTZ(9),
  FECHA_HORA_LLEGADA    TIMESTAMP_NTZ(9),
  PRIMARY KEY (ID_ENTREGA_CLIENTE),
  FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTES.CLIENTE(ID_CLIENTE)
);

CREATE OR REPLACE TABLE ENTREGAS.ENTREGA_CLIENTE_DETALLE (
  ID_ENTREGA_CLIENTE_DETALLE VARCHAR(50) NOT NULL,
  ID_ENTREGA_CLIENTE         VARCHAR(50) NOT NULL,
  ID_PEDIDO_COMBINACION_DETALLE VARCHAR(50) NOT NULL,
  CANTIDAD                  NUMBER(38,0),
  PRIMARY KEY (ID_ENTREGA_CLIENTE_DETALLE),
  FOREIGN KEY (ID_ENTREGA_CLIENTE) REFERENCES ENTREGAS.ENTREGA_CLIENTE(ID_ENTREGA_CLIENTE),
  FOREIGN KEY (ID_PEDIDO_COMBINACION_DETALLE) REFERENCES PEDIDOS.PEDIDO_COMBINACION_DETALLE(ID_PEDIDO_COMBINACION_DETALLE)
);

CREATE OR REPLACE TABLE ENTREGAS.ENTREGA_MAQUILA (
  ID_ENTREGA_MAQUILA    VARCHAR(50) NOT NULL,
  ID_MAQUILA            NUMBER(38,0) NOT NULL,
  FECHA_HORA_SALIDA     TIMESTAMP_NTZ(9),
  FECHA_HORA_LLEGADA    TIMESTAMP_NTZ(9),
  PRIMARY KEY (ID_ENTREGA_MAQUILA),
  FOREIGN KEY (ID_MAQUILA) REFERENCES MAQUILA.MAQUILA(ID_MAQUILA)
);

CREATE OR REPLACE TABLE ENTREGAS.ENTREGA_MAQUILA_DETALLE (
  ID_ENTREGA_MAQUILA_DETALLE VARCHAR(50) NOT NULL,
  ID_ENTREGA_MAQUILA         VARCHAR(50) NOT NULL,
  ID_PEDIDO_COMBINACION_DETALLE VARCHAR(50) NOT NULL,
  CANTIDAD                  NUMBER(38,0),
  PRIMARY KEY (ID_ENTREGA_MAQUILA_DETALLE),
  FOREIGN KEY (ID_ENTREGA_MAQUILA) REFERENCES ENTREGAS.ENTREGA_MAQUILA(ID_ENTREGA_MAQUILA),
  FOREIGN KEY (ID_PEDIDO_COMBINACION_DETALLE) REFERENCES PEDIDOS.PEDIDO_COMBINACION_DETALLE(ID_PEDIDO_COMBINACION_DETALLE)
);

--------------------------------------------------------------------------------
-- 10) CUENTAS
--------------------------------------------------------------------------------
CREATE OR REPLACE TABLE CUENTAS.COBRO (
  ID_COBRO              VARCHAR(50) NOT NULL,
  ID_PEDIDO             VARCHAR(50) NOT NULL,
  ID_CLIENTE            NUMBER(38,0) NOT NULL,
  IDENTIFICADOR_MOVIMIENTO VARCHAR(100),
  CANTIDAD              NUMBER(38,0),
  FECHA_HORA            TIMESTAMP_NTZ(9),
  PRIMARY KEY (ID_COBRO),
  FOREIGN KEY (ID_PEDIDO) REFERENCES PEDIDOS.PEDIDO(ID_PEDIDO),
  FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTES.CLIENTE(ID_CLIENTE)
);

CREATE OR REPLACE TABLE CUENTAS.PAGO (
  ID_PAGO               VARCHAR(50) NOT NULL,
  ID_PEDIDO             VARCHAR(50) NOT NULL,
  ID_MAQUILA            NUMBER(38,0) NOT NULL,
  IDENTIFICADOR_MOVIMIENTO VARCHAR(100),
  CANTIDAD              NUMBER(38,0),
  FECHA_HORA            TIMESTAMP_NTZ(9),
  PRIMARY KEY (ID_PAGO),
  FOREIGN KEY (ID_PEDIDO) REFERENCES PEDIDOS.PEDIDO(ID_PEDIDO),
  FOREIGN KEY (ID_MAQUILA) REFERENCES MAQUILA.MAQUILA(ID_MAQUILA)
);

--------------------------------------------------------------------------------
-- 11) EMPLEADOS
--------------------------------------------------------------------------------
CREATE OR REPLACE TABLE EMPLEADOS.EMPLEADO (
  ID_EMPLEADO          NUMBER(38,0) NOT NULL,
  NOMBRE               VARCHAR(100) NOT NULL,
  DEPARTAMENTO         VARCHAR(50),
  PUESTO               VARCHAR(50),
  FECHA_NACIMIENTO     DATE,
  FECHA_CONTRATACION   DATE,
  FECHA_BAJA           DATE,
  DIRECCION            VARCHAR(255),
  NUMERO_CUENTA        VARCHAR(50),
  NUMERO_SEGURO_SOCIAL VARCHAR(50),
  EMAIL                VARCHAR(100),
  TELEFONO             VARCHAR(20),
  ESTADO               VARCHAR(20),
  TIPO_CONTRATO        VARCHAR(20),
  PRIMARY KEY (ID_EMPLEADO)
);

CREATE OR REPLACE TABLE EMPLEADOS.VENDEDORES (
  ID_VENDEDOR          NUMBER(38,0) NOT NULL,
  ID_EMPLEADO          NUMBER(38,0) NOT NULL,
  SALARIO_BASE         NUMBER(38,0),
  COMISION_PORCENTUAL  NUMBER(38,0),
  PRIMARY KEY (ID_VENDEDOR),
  FOREIGN KEY (ID_EMPLEADO) REFERENCES EMPLEADOS.EMPLEADO(ID_EMPLEADO)
);

--------------------------------------------------------------------------------
-- 12) STOCK
--------------------------------------------------------------------------------
CREATE OR REPLACE TABLE STOCK.RECIBIDO (
  ID_RECIBIDO           VARCHAR(50) NOT NULL,
  ID_PEDIDO_COMBINACION_DETALLE VARCHAR(50) NOT NULL,
  FECHA_HORA_SALIDA     TIMESTAMP_NTZ(9),
  FECHA_HORA_LLEGADA    TIMESTAMP_NTZ(9),
  PRIMARY KEY (ID_RECIBIDO),
  FOREIGN KEY (ID_PEDIDO_COMBINACION_DETALLE) REFERENCES PEDIDOS.PEDIDO_COMBINACION_DETALLE(ID_PEDIDO_COMBINACION_DETALLE)
);

CREATE OR REPLACE TABLE STOCK.RECIBIDO_DETALLE (
  ID_RECIBIDO_DETALLE   VARCHAR(50) NOT NULL,
  ID_RECIBIDO           VARCHAR(50) NOT NULL,
  ID_PEDIDO_COMBINACION_DETALLE VARCHAR(50) NOT NULL,
  CANTIDAD              NUMBER(38,0),
  PRIMARY KEY (ID_RECIBIDO_DETALLE),
  FOREIGN KEY (ID_RECIBIDO) REFERENCES STOCK.RECIBIDO(ID_RECIBIDO),
  FOREIGN KEY (ID_PEDIDO_COMBINACION_DETALLE) REFERENCES PEDIDOS.PEDIDO_COMBINACION_DETALLE(ID_PEDIDO_COMBINACION_DETALLE)
);


